#!/bin/bash

# دریافت لینک ورودی
INPUT_LINK=$1

# بررسی اینکه لینک خالی نباشد
if [ -z "$INPUT_LINK" ]; then
    echo "Usage: $0 <vless://... or vmess://... or ss://... or trojan://...>"
    exit 1
fi

# استخراج اطلاعات از لینک VLESS
PROTOCOL=$(echo "$INPUT_LINK" | awk -F'://' '{print $1}')
UUID=$(echo "$INPUT_LINK" | awk -F'[@:]' '{print $2}')
ADDRESS=$(echo "$INPUT_LINK" | awk -F'[@:?]' '{print $3}')
PORT=$(echo "$INPUT_LINK" | awk -F'[@:?]' '{print $4}')
NETWORK_TYPE=$(echo "$INPUT_LINK" | grep -oE 'type=[a-zA-Z]+' | cut -d'=' -f2)
SECURITY=$(echo "$INPUT_LINK" | grep -oE 'security=[a-zA-Z]+' | cut -d'=' -f2)
PATH=$(echo "$INPUT_LINK" | grep -oE 'path=[^&]+' | cut -d'=' -f2 | sed 's/%2F/\//g' | sed 's/%3A/:/g' | sed 's/%40/@/g' | sed 's/%20/ /g')
HOST=$(echo "$INPUT_LINK" | grep -oE 'Host=[^&]+' | cut -d'=' -f2)

# تنظیم مقادیر پیش‌فرض در صورت عدم وجود
[ -z "$NETWORK_TYPE" ] && NETWORK_TYPE="tcp"
[ -z "$SECURITY" ] && SECURITY="none"
[ -z "$PATH" ] && PATH="/"
[ -z "$HOST" ] && HOST="$ADDRESS"

# تولید JSON خروجی و ذخیره در فایل
cat <<EOF > config.json
{
  "log": {
    "access": "",
    "error": "",
    "loglevel": "warning"
  },
  "inbounds": [
    {
      "tag": "socks",
      "port": 10808,
      "listen": "127.0.0.1",
      "protocol": "socks",
      "settings": {
        "auth": "noauth",
        "udp": true
      }
    },
    {
      "tag": "http",
      "port": 10809,
      "listen": "127.0.0.1",
      "protocol": "http",
      "settings": {
        "auth": "noauth",
        "udp": true
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "$PROTOCOL",
      "settings": {
        "vnext": [
          {
            "address": "$ADDRESS",
            "port": $PORT,
            "users": [
              {
                "id": "$UUID",
                "encryption": "none"
              }
            ]
          }
        ]
      },
      "streamSettings": {
        "network": "$NETWORK_TYPE",
        "security": "$SECURITY",
        "wsSettings": {
          "path": "$PATH",
          "headers": {
            "Host": "$HOST"
          }
        }
      },
      "tag": "proxy"
    }
  ]
}
EOF

./xray -config config.json
